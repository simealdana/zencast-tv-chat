{"version":3,"sources":["webinar/js/webrtcAdaptor.js","webinar/components/video.tsx","webinar/js/Icons.js","webinar/components/userRoom.tsx","webinar/components/adminRoom.tsx","webinar/components/rooms.tsx","webinar/components/goToRooms.tsx","webinar/reducer/reducer.tsx","redux/store.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["WebRTCAdaptor","initialValues","init","PeerStats","streamId","this","totalBytesReceivedCount","totalBytesSent","packetsLost","fractionLost","startTime","lastBytesReceived","lastBytesSent","currentTimestamp","lastTime","timerId","firstByteSentCount","firstBytesReceivedCount","audioLevel","Math","floor","totalBytesSentCount","timestamp","bytesReceived","bytesSent","thiz","key","peerconnection_config","sdp_constraints","remotePeerConnection","Array","remotePeerConnectionStats","remoteDescriptionSet","iceCandidateList","webSocketAdaptor","roomName","videoTrackSender","audioTrackSender","playStreamId","micGainNode","localStream","bandwidth","isMultiPeer","multiPeerStreamId","isPlayMode","debug","publishMode","candidateTypes","desktopStream","camera_location","camera_margin","camera_percent","hasOwnProperty","localVideo","document","getElementById","localVideoId","remoteVideo","remoteVideoId","mediaConstraints","video","window","console","log","callbackError","navigator","mediaDevices","setDesktopwithCameraSource","stream","audioStream","onEndedCallback","getUserMedia","audio","then","cameraStream","canvas","createElement","canvasContext","getContext","screenVideo","srcObject","play","cameraVideo","canvasStream","captureStream","addTrack","getAudioTracks","gotStream","updateVideoTrack","onended","setInterval","width","videoWidth","height","videoHeight","drawImage","positionY","cameraWidth","cameraHeight","positionX","catch","error","name","message","prepareStreamTracks","audioConstraint","audioTrack","length","removeTrack","media_audio_constraint","event","callback","setVideoCameraSource","getDisplayMedia","openStream","switchVideoCameraCapture","closeStream","getVideoTracks","forEach","track","stop","checkBrowserScreenShareSupported","isConnected","WebSocketAdaptor","mandatory","micStream","audioContext","AudioContext","desktopSoundGainNode","createGain","gain","value","audioDestionation","createMediaStreamDestination","createMediaStreamSource","connect","mode","wsConn","WebSocket","websocket_url","connected","pingTimerId","clearPingTimer","clearInterval","close","onopen","send","JSON","stringify","command","text","readyState","onmessage","obj","parse","data","startPublishing","candidate","takeCandidate","label","type","takeConfiguration","sdp","closePeerConnection","definition","join","onerror","onclose","enableMicInMixedAudio","enable","publish","token","jsCmd","joinRoom","room","roomId","enableTracks","push","trackList","multiPeer","leaveFromRoom","leave","getStreamInfo","enableTrack","mainTrackId","trackId","enabled","getTracks","enumerateDevices","devices","deviceArray","device","kind","err","deviceId","videoTrack","warn","switchDesktopCapture","switchDesktopCaptureWithCamera","updateLocalStream","stopDesktop","getSenders","find","s","replaceTrack","result","onTrack","streams","dataObj","iceCandidateReceived","protocolSupported","protocol","element","toLowerCase","includes","sdpMLineIndex","id","sdpMid","toString","initDataChannel","dataChannel","initPeerConnection","dataChannelMode","closedStreamId","RTCPeerConnection","addStream","onicecandidate","ontrack","createDataChannel","ordered","ondatachannel","ev","channel","dataChannelPeer","oniceconnectionstatechange","state","iceConnectionState","changeBandwidth","e","signalingState","playStreamIndex","indexOf","splice","signallingState","gotDescription","configuration","setLocalDescription","responose","turnOffLocalCamera","turnOnLocalCamera","muteLocalMic","unmuteLocalMic","idOfStream","typeOfConfiguration","conf","isTypeOffer","setRemoteDescription","RTCSessionDescription","response","i","addIceCandidate","createAnswer","idOfTheStream","tmpLabel","tmpCandidate","RTCIceCandidate","createOffer","getVideoSender","videoSender","adapter","browserDetails","browser","version","RTCRtpSender","prototype","senders","errorDefinition","parameters","getParameters","encodings","maxBitrate","setParameters","Promise","reject","getStats","stats","currentTime","totalBytesReceived","enableStats","closeWebSocket","peerMessage","sendData","VideoStream","props","videoRef","React","createRef","updateVideoStream","current","className","ref","autoPlay","Component","ShareScreenIcon","xmlns","viewBox","fill","d","MicOnIcon","MicOffIcon","CamOnIcon","CamOffIcon","UserRoom","isMicMute","ifCamaraOff","webinarReducer","cols","layout","x","y","w","h","static","minW","maxW","rowHeight","roomOfStream","map","v","index","style","zIndex","position","bottom","onClick","microMute","camaraOff","showVideo","dispatch","setAdmin","admin","payload","setCamara","camara","setMicro","micro","AdminRoom","generateDOM","emitCamaraOff","turnOffCamara","socket","emit","emitMuteOff","muteMicro","col","lg","md","sm","xs","xxs","Infinity","isResizable","isDraggable","Room","createRoom","valid","a","fetch","method","headers","cache","res","json","setState","webRTCInit","setRedirect","websocketURL","webRTCAdaptor","OfferToReceiveAudio","OfferToReceiveVideo","info","playOnly","item","roomNameBox","playVideo","removeRemoteVideo","isAdmin","streamInformation","isDataChanelOpen","handleNotificationEvent","initSocket","leaveRoom","setRoomOfStream","auxRooms","filter","socketId","clients","some","handleChange","target","userName","setSocket","io","on","sockets","waitCreateRoom","emitLeaveRoom","newRoomOfStream","isCameraOff","sendNotificationEvent","isMicMuted","eventType","publishStreamId","notEvent","redirect","renderRedirect","to","camaraId","params","match","setRoomName","Headers","body","muted","rooms","GoToRoomInput","componentDidMount","roomsHash","handleChangeRedirect","onChange","initState","actions","reducer","combineReducers","store","createStore","App","Fragment","path","exact","component","Rooms","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c02f5bd5.chunk.js","sourcesContent":["import adapter from 'webrtc-adapter';\r\n\r\nfunction WebRTCAdaptor(initialValues,init = false)\r\n{\r\n if (init) {\r\n\t \r\n\tclass PeerStats {\r\n\r\n\t\tconstructor(streamId) {\r\n\t\t\tthis.streamId = streamId;\r\n\t\t\tthis.totalBytesReceivedCount = 0;\r\n\t\t\tthis.totalBytesSent = 0;\r\n\t\t\tthis.packetsLost = 0;\r\n\t\t\tthis.fractionLost = 0;\r\n\t\t\tthis.startTime = 0;\r\n\t\t\tthis.lastBytesReceived = 0;\r\n\t\t\tthis.lastBytesSent = 0;\r\n\t\t\tthis.currentTimestamp = 0;\r\n\t\t\tthis.lastTime = 0;\r\n\t\t\tthis.timerId = 0;\r\n\t\t\tthis.firstByteSentCount = 0;\r\n\t\t\tthis.firstBytesReceivedCount = 0;\r\n\t\t\tthis.audioLevel = -1;\r\n\t\t}\r\n\r\n\t\t//kbits/sec\r\n\t\tget averageOutgoingBitrate() {\r\n\t\t\treturn Math.floor(8 * (this.totalBytesSentCount - this.firstByteSentCount) / (this.currentTimestamp - this.startTime));\r\n\t\t}\r\n\r\n\t\t//kbits/sec\r\n\t\tget averageIncomingBitrate() {\r\n\t\t\treturn Math.floor(8 * (this.totalBytesReceivedCount - this.firstBytesReceivedCount) / (this.currentTimestamp - this.startTime));\r\n\t\t}\r\n\r\n\t\t//kbits/sec\r\n\t\tget currentOutgoingBitrate() {\r\n\t\t\treturn Math.floor(8 * (this.totalBytesSentCount - this.lastBytesSent) / (this.currentTimestamp - this.lastTime));\r\n\t\t}\r\n\r\n\t\t//kbits/sec\r\n\t\tget currentIncomingBitrate() {\r\n\t\t\treturn Math.floor(8 * (this.totalBytesReceivedCount - this.lastBytesReceived) / (this.currentTimestamp - this.lastTime));\r\n\t\t}\r\n\r\n\t\tset currentTime(timestamp) {\r\n\t\t\tthis.lastTime = this.currentTimestamp;\r\n\t\t\tthis.currentTimestamp = timestamp;\r\n\t\t\tif (this.startTime == 0) {\r\n\t\t\t\tthis.startTime = timestamp-1; // do not have zero division error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset totalBytesReceived(bytesReceived) {\r\n\t\t\tthis.lastBytesReceived = this.totalBytesReceivedCount;\r\n\t\t\tthis.totalBytesReceivedCount = bytesReceived;\r\n\t\t\tif (this.firstBytesReceivedCount == 0) {\r\n\t\t\t\tthis.firstBytesReceivedCount = bytesReceived;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset totalBytesSent(bytesSent) {\r\n\t\t\tthis.lastBytesSent = this.totalBytesSentCount;\r\n\t\t\tthis.totalBytesSentCount = bytesSent;\r\n\t\t\tif (this.firstByteSentCount == 0) {\r\n\t\t\t\tthis.firstByteSentCount = bytesSent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar thiz = this;\r\n\tthiz.peerconnection_config = null;\r\n\tthiz.sdp_constraints = null;\r\n\tthiz.remotePeerConnection = new Array();\r\n\tthiz.remotePeerConnectionStats = new Array();\r\n\tthiz.remoteDescriptionSet = new Array();\r\n\tthiz.iceCandidateList = new Array();\r\n\tthiz.webSocketAdaptor = null;\r\n\tthiz.roomName = null;\r\n\tthiz.videoTrackSender = null;\r\n\tthiz.audioTrackSender = null;\r\n\tthiz.playStreamId = new Array();\r\n\tthiz.micGainNode = null;\r\n\tthiz.localStream = null;\r\n\tthiz.bandwidth = 900; //default bandwidth kbps\r\n\tthiz.isMultiPeer = false; //used for multiple peer client\r\n\tthiz.multiPeerStreamId = null;   //used for multiple peer client\r\n\r\n\tthiz.isPlayMode = false;\r\n\tthiz.debug = false;\r\n\r\n\tthiz.publishMode=\"camera\"; //screen, screen+camera\r\n\r\n\t/**\r\n\t * Supported candidate types. Below types are for both sending and receiving candidates.\r\n\t * It means if when client receives candidate from STUN server, it sends to the server if candidate's protocol\r\n\t * is in the list. Likely, when client receives remote candidate from server, it adds as ice candidate\r\n\t * if candidate protocol is in the list below.\r\n\t */\r\n\tthiz.candidateTypes = [\"udp\", \"tcp\"];\r\n\r\n\r\n\tthiz.desktopStream = null;\r\n\r\n\t/**\r\n\t * The cam_location below is effective when camera and screen is send at the same time.\r\n\t * possible values are top and bottom. It's on right all the time\r\n\t */\r\n\tthiz.camera_location = \"top\"\r\n\r\n\t/**\r\n\t * The cam_margin below is effective when camera and screen is send at the same time.\r\n\t * This is the margin value in px from the edges\r\n\t */\r\n\tthiz.camera_margin = 15;\r\n\r\n\t/**\r\n\t * Thiz camera_percent is how large the camera view appear on the screen. It's %15 by default.\r\n\t */\r\n\tthiz.camera_percent = 15;\r\n\r\n\tfor(var key in initialValues) {\r\n\t\tif(initialValues.hasOwnProperty(key)) {\r\n\t\t\tthis[key] = initialValues[key];\r\n\t\t}\r\n\t}\r\n\r\n\tthiz.localVideo = document.getElementById(thiz.localVideoId);\r\n\tthiz.remoteVideo = document.getElementById(thiz.remoteVideoId);\r\n\r\n\t// It should be compatible with previous version\r\n\tif(thiz.mediaConstraints.video == \"camera\") {\r\n\t\tthiz.publishMode=\"camera\";\r\n\t}\r\n\telse if(thiz.mediaConstraints.video == \"screen\") {\r\n\t\tthiz.publishMode=\"screen\";\r\n\t}\r\n\telse if(thiz.mediaConstraints.video == \"screen+camera\") {\r\n\t\tthiz.publishMode=\"screen+camera\";\r\n\t}\r\n\r\n\tif (!(\"WebSocket\" in window)) {\r\n\t\tconsole.log(\"WebSocket not supported.\");\r\n\t\tthiz.callbackError(\"WebSocketNotSupported\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (typeof navigator.mediaDevices == \"undefined\" && thiz.isPlayMode == false) {\r\n\t\tconsole.log(\"Cannot open camera and mic because of unsecure context. Please Install SSL(https)\");\r\n\t\tthiz.callbackError(\"UnsecureContext\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.setDesktopwithCameraSource = function(stream, streamId, audioStream, onEndedCallback) {\r\n\r\n\t\tthiz.desktopStream = stream;\r\n\r\n\t\tnavigator.mediaDevices.getUserMedia({video: true, audio: false})\r\n\t\t.then(function(cameraStream) {\r\n\r\n\t\t\t//create a canvas element\r\n\t\t\tvar canvas = document.createElement(\"canvas\");\r\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\r\n\r\n\t\t\t//create video element for screen\r\n\t\t\t//var screenVideo = document.getElementById('sourceVideo');\r\n\t\t\tvar screenVideo = document.createElement('video');\r\n\t\t\t//TODO: check audio track\r\n\t\t\tscreenVideo.srcObject = stream;\r\n\t\t\tscreenVideo.play();\r\n\t\t\t//create video element for camera\r\n\t\t\tvar cameraVideo = document.createElement('video');\r\n\t\t\t//TODO: check audio track\r\n\t\t\tcameraVideo.srcObject = cameraStream;\r\n\t\t\tcameraVideo.play();\r\n\t\t\tvar canvasStream = canvas.captureStream(15);\r\n\t\t\tcanvasStream.addTrack(audioStream.getAudioTracks()[0]);\r\n\r\n\t\t\tif(thiz.localStream == null){\r\n\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\r\n\t\t\t\tthiz.gotStream(canvasStream);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthiz.updateVideoTrack(canvasStream,streamId,thiz.mediaConstraints,onended,null);\r\n\t\t\t}\r\n\r\n\t\t\t//update the canvas\r\n\t\t\tsetInterval(function(){\r\n\t\t\t\t//draw screen to canvas\r\n\t\t\t\tcanvas.width = screenVideo.videoWidth;\r\n\t\t\t\tcanvas.height = screenVideo.videoHeight;\r\n\t\t\t\tcanvasContext.drawImage(screenVideo, 0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\t\tvar cameraWidth = screenVideo.videoWidth * (thiz.camera_percent/100);\r\n\t\t\t\tvar cameraHeight = (cameraVideo.videoHeight/cameraVideo.videoWidth)*cameraWidth\r\n\r\n\t\t\t\tvar positionX = (canvas.width - cameraWidth) - thiz.camera_margin;\r\n\t\t\t\tvar positionY;\r\n\r\n\t\t\t\tif (thiz.camera_location == \"top\") {\r\n\t\t\t\t\tpositionY = thiz.camera_margin;\r\n\t\t\t\t}\r\n\t\t\t\telse { //if not top, make it bottom\r\n\t\t\t\t\t//draw camera on right bottom corner\r\n\t\t\t\t\tpositionY = (canvas.height - cameraHeight) - thiz.camera_margin;\r\n\t\t\t\t}\r\n\t\t\t\tcanvasContext.drawImage(cameraVideo, positionX, positionY, cameraWidth, cameraHeight);\r\n\t\t\t}, 66);\r\n\r\n\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t});\r\n\t}\r\n\t\tthis.prepareStreamTracks = function (mediaConstraints,audioConstraint,stream,streamId) {\r\n\r\n\t\t//this trick, getting audio and video separately, make us add or remove tracks on the fly\r\n\t\tvar audioTrack = stream.getAudioTracks();\r\n\t\tif (audioTrack.length > 0) {\r\n\t\t\tstream.removeTrack(audioTrack[0]);\r\n\t\t}\r\n\r\n\t\t//now get only audio to add this stream\r\n\t\tif (audioConstraint != \"undefined\" && audioConstraint != false) {\r\n\t\t\tvar media_audio_constraint = { audio: audioConstraint};\r\n\t\t\tnavigator.mediaDevices.getUserMedia(media_audio_constraint)\r\n\t\t\t.then(function(audioStream) {\r\n\t\t\t\t//add callback if desktop is sharing\r\n\r\n\t\t\t\tvar onended = function(event) {\r\n\t\t\t\t\tthiz.callback(\"screen_share_stopped\");\r\n\t\t\t\t\tthiz.setVideoCameraSource(streamId, mediaConstraints, null, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(thiz.publishMode == \"screen\"){\r\n\t\t\t\t\tthiz.updateVideoTrack(stream,streamId,mediaConstraints,onended,true);\r\n\t\t\t\t}\r\n\t\t\t\telse if(thiz.publishMode == \"screen+camera\" ){\r\n\t\t\t\t\tthiz.setDesktopwithCameraSource(stream,streamId,audioStream,onended);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\r\n\t\t\t\t\tthiz.gotStream(stream);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// debugger\r\n\t\t\t// if (audioStream !== undefined) {\r\n\t\t\t// \tstream.addTrack(audioStream.getAudioTracks()[0]);\r\n\t\t\t// \tthiz.gotStream(stream);\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get user media\r\n\t */\r\n\tthis.getUserMedia = function (mediaConstraints, audioConstraint, streamId) {\r\n\r\n\t\t// Check Media Constraint video value screen or screen + camera\r\n\t\tif(thiz.publishMode == \"screen+camera\" || thiz.publishMode == \"screen\"){\r\n\r\n\t\t\tnavigator.mediaDevices.getDisplayMedia(mediaConstraints)\r\n\t\t\t.then(function(stream){\r\n\t\t\t\tthiz.prepareStreamTracks(mediaConstraints,audioConstraint,stream, streamId);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tif (error.name === \"NotAllowedError\") {\r\n\t\t\t\t\tconsole.debug(\"Permission denied error\");\r\n\t\t\t\t\tthiz.callbackError(\"ScreenSharePermissionDenied\");\r\n\r\n\t\t\t\t\t// Redirect Default Stream Camera\r\n\t\t\t\t\tif(thiz.localStream == null){\r\n\r\n\t\t\t\t\t\tvar mediaConstraints = {\r\n\t\t\t\t\t\t\tvideo : true,\r\n\t\t\t\t\t\t\taudio : true\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tthiz.openStream(mediaConstraints);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tthiz.switchVideoCameraCapture(streamId);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// If mediaConstraints only user camera\r\n\t\telse {\r\n\t\t\tnavigator.mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t\t.then(function(stream){\r\n\r\n\t\t\t\tthiz.prepareStreamTracks(mediaConstraints,audioConstraint,stream, streamId);\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Open media stream, it may be screen, camera or audio\r\n\t */\r\n\tthis.openStream = function(mediaConstraints) {\r\n\r\n\t\tthiz.mediaConstraints = mediaConstraints;\r\n\t\tvar audioConstraint = false;\r\n\t\tif (typeof mediaConstraints.audio != \"undefined\" && mediaConstraints.audio != false) {\r\n\t\t\taudioConstraint = mediaConstraints.audio;\r\n\t\t}\r\n\r\n\t\tif (typeof mediaConstraints.video != \"undefined\") {\r\n\t\t\tthiz.getUserMedia(mediaConstraints, audioConstraint);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(\"MediaConstraint video is not defined\");\r\n\t\t\tthiz.callbackError(\"media_constraint_video_not_defined\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Closes stream, if you want to stop peer connection, call stop(streamId)\r\n\t */\r\n\tthis.closeStream = function () {\r\n\r\n\t\tthiz.localStream.getVideoTracks().forEach(function(track) {\r\n\t\t\ttrack.onended = null;\r\n\t\t\ttrack.stop();\r\n\t\t});\r\n\r\n\t\tthiz.localStream.getAudioTracks().forEach(function(track) {\r\n\t\t\ttrack.onended = null;\r\n\t\t\ttrack.stop();\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks browser supports screen share feature\r\n\t * if exist it calls callback with \"browser_screen_share_supported\"\r\n\t */\r\n\r\n\tthis.checkBrowserScreenShareSupported = function() \r\n\t{\r\n\t\tif ((typeof navigator.mediaDevices != \"undefined\"  && navigator.mediaDevices.getDisplayMedia) || navigator.getDisplayMedia ) {\r\n\t\t\tthiz.callback(\"browser_screen_share_supported\");\r\n\t\t}\r\n\t};\r\n\r\n\t/*\r\n\t * Call check browser support. Below function is called when this class is created\r\n\t */\r\n\r\n\tthiz.checkBrowserScreenShareSupported();\r\n\r\n\t/*\r\n\t * Below lines are executed as well when this class is created\r\n\t */\r\n\tif (!this.isPlayMode && typeof thiz.mediaConstraints != \"undefined\" && this.localStream == null)\r\n\t{\r\n\t\tif (typeof thiz.mediaConstraints.video != \"undefined\" && thiz.mediaConstraints.video != false)\r\n\t\t{\r\n\t\t\t// if it is not play mode and media constraint is defined, try to get user media\r\n\t\t\tif (thiz.mediaConstraints.audio.mandatory)\r\n\t\t\t{\r\n\t\t\t\t//this case captures mic and video(audio(screen audio) + video(screen)) and then provide mute/unmute mic with\r\n\t\t\t\t//enableMicInMixedAudio\r\n\t\t\t\tnavigator.mediaDevices.getUserMedia({audio:true, video:false}).then(function(micStream){\r\n\t\t\t\t\tnavigator.mediaDevices.getUserMedia(thiz.mediaConstraints)\r\n\t\t\t\t\t.then(function(stream)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.debug(\"audio stream track count: \" + audioStream.getAudioTracks().length);\r\n\r\n\t\t\t\t\t\tvar audioContext = new AudioContext();\r\n\t\t\t\t\t\tvar desktopSoundGainNode = audioContext.createGain();\r\n\r\n\t\t\t\t\t\tdesktopSoundGainNode.gain.value = 1;\r\n\r\n\t\t\t\t\t\tvar audioDestionation = audioContext.createMediaStreamDestination();\r\n\t\t\t\t\t\tvar audioSource = audioContext.createMediaStreamSource(stream);\r\n\r\n\t\t\t\t\t\taudioSource.connect(desktopSoundGainNode);\r\n\r\n\t\t\t\t\t\tthiz.micGainNode = audioContext.createGain();\r\n\t\t\t\t\t\tthiz.micGainNode.gain.value = 1;\r\n\t\t\t\t\t\tvar audioSource2 = audioContext.createMediaStreamSource(micStream);\r\n\t\t\t\t\t\taudioSource2.connect(thiz.micGainNode);\r\n\r\n\t\t\t\t\t\tdesktopSoundGainNode.connect(audioDestionation);\r\n\t\t\t\t\t\tthiz.micGainNode.connect(audioDestionation);\r\n\r\n\t\t\t\t\t\tstream.removeTrack(stream.getAudioTracks()[0]);\r\n\t\t\t\t\t\taudioDestionation.stream.getAudioTracks().forEach(function(track) {\r\n\t\t\t\t\t\t\tstream.addTrack(track);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconsole.debug(\"Running gotStream\");\r\n\t\t\t\t\t\tthiz.gotStream(stream);\r\n\r\n\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t\t\t\t});\r\n\t\t\t\t}).catch(function(error) {\r\n\t\t\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//most of the times, this statement runs\r\n\t\t\t\tthiz.openStream(thiz.mediaConstraints, thiz.mode);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// get only audio\r\n\t\t\tvar media_audio_constraint = { audio: thiz.mediaConstraints.audio };\r\n\t\t\tnavigator.mediaDevices.getUserMedia(media_audio_constraint)\r\n\t\t\t.then(function(stream) {\r\n\t\t\t\tthiz.gotStream(stream);\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tthiz.callbackError(error.name, error.message);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse {\r\n\r\n\t\t//just playing, it does not open any stream\r\n\t\tif (thiz.webSocketAdaptor == null || thiz.webSocketAdaptor.isConnected() == false) {\r\n\t\t\tthiz.webSocketAdaptor = new WebSocketAdaptor();\r\n\t\t}\r\n\t}\r\n\r\n\tthis.enableMicInMixedAudio = function(enable) {\r\n\t\tif (thiz.micGainNode != null) {\r\n\t\t\tif (enable) {\r\n\t\t\t\tthiz.micGainNode.gain.value = 1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthiz.micGainNode.gain.value = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.publish = function (streamId, token) {\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"publish\",\r\n\t\t\t\tstreamId : streamId,\r\n\t\t\t\ttoken : token,\r\n\t\t\t\tvideo: thiz.localStream.getVideoTracks().length > 0 ? true : false,\r\n\t\t\t\t\t\taudio: thiz.localStream.getAudioTracks().length > 0 ? true : false,\r\n\t\t};\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\r\n\tthis.joinRoom = function (roomName, streamId) {\r\n\t\tthiz.roomName = roomName;\r\n\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"joinRoom\",\r\n\t\t\t\troom: roomName,\r\n\t\t\t\tstreamId: streamId,\r\n\t\t}\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\r\n\t}\r\n\r\n\tthis.play = function (streamId, token, roomId, enableTracks) {\r\n\t\tthiz.playStreamId.push(streamId);\r\n\t\tvar jsCmd =\r\n\t\t{\r\n\t\t\t\tcommand : \"play\",\r\n\t\t\t\tstreamId : streamId,\r\n\t\t\t\ttoken : token,\r\n\t\t\t\troom : roomId,\r\n\t\t\t\ttrackList : enableTracks,\r\n\t\t}\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.stop = function(streamId) {\r\n\t\tthiz.closePeerConnection(streamId);\r\n\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"stop\",\r\n\t\t\t\tstreamId: streamId,\r\n\t\t};\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.join = function(streamId) {\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"join\",\r\n\t\t\t\tstreamId : streamId,\r\n\t\t\t\tmultiPeer : thiz.isMultiPeer && thiz.multiPeerStreamId == null,\r\n\t\t\t\tmode : thiz.isPlayMode ? \"play\" : \"both\",\r\n\t\t};\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.leaveFromRoom = function(roomName) {\r\n\t\tthiz.roomName = roomName;\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"leaveFromRoom\",\r\n\t\t\t\troom: roomName,\r\n\t\t};\r\n\t\tconsole.log (\"leave request is sent for \"+ roomName);\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.leave = function (streamId) {\r\n\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"leave\",\r\n\t\t\t\tstreamId: thiz.isMultiPeer && thiz.multiPeerStreamId != null ? thiz.multiPeerStreamId : streamId,\r\n\t\t};\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t\tthiz.closePeerConnection(streamId);\r\n\t\tthiz.multiPeerStreamId = null;\r\n\t}\r\n\r\n\tthis.getStreamInfo = function(streamId) {\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"getStreamInfo\",\r\n\t\t\t\tstreamId: streamId,\r\n\t\t};\r\n\t\tthis.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.enableTrack = function(mainTrackId, trackId, enabled) {\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"enableTrack\",\r\n\t\t\t\tstreamId : mainTrackId,\r\n\t\t\t\ttrackId : trackId,\r\n\t\t\t\tenabled : enabled,\r\n\t\t};\r\n\t\tthis.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.getTracks = function(streamId, token) {\r\n\t\tthiz.playStreamId.push(streamId);\r\n\t\tvar jsCmd =\r\n\t\t{\r\n\t\t\t\tcommand : \"getTrackList\",\r\n\t\t\t\tstreamId : streamId,\r\n\t\t\t\ttoken : token,\r\n\t\t}\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.gotStream = function (stream)\r\n\t{\r\n\t\tthiz.localStream = stream;\r\n\t\tthiz.localVideo.srcObject = stream;\r\n\t\tif (thiz.webSocketAdaptor == null || thiz.webSocketAdaptor.isConnected() == false) {\r\n\t\t\tthiz.webSocketAdaptor = new WebSocketAdaptor();\r\n\t\t}\r\n\r\n\t\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\r\n\t\t\tlet deviceArray = new Array();\r\n\r\n\t\t\tdevices.forEach(function(device) {\t\r\n\t\t\t\tif (device.kind == \"audioinput\" || device.kind == \"videoinput\") {\r\n\t\t\t\t\tdeviceArray.push(device);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthiz.callback(\"available_devices\", deviceArray);\r\n\r\n\t\t}).catch(function(err) {\r\n\t\t\tconsole.error(\"Cannot get devices -> error name: \" + err.name + \": \" + err.message);\r\n\t\t});\r\n\t};\r\n\r\n\tthis.switchVideoCameraCapture = function(streamId, deviceId) {\r\n\t\t//stop the track because in some android devices need to close the current camera stream\r\n\t\tvar videoTrack = thiz.localStream.getVideoTracks()[0];\r\n\t\tif (videoTrack) {\r\n\t\t\tvideoTrack.stop();\r\n\t\t}\r\n\t\telse {\r\n\t\t   console.warn(\"There is no video track in local stream\");\r\n\t\t}\r\n\t\t\r\n\t\tthiz.publishMode = \"camera\";\r\n\r\n\t\tif (typeof deviceId != \"undefined\" ) {\r\n\t\t\tthiz.mediaConstraints.video = { \"deviceId\": deviceId };\r\n\t\t}\r\n\t\tthiz.setVideoCameraSource(streamId, thiz.mediaConstraints, null, true, deviceId);\r\n\t}\r\n\r\n\tthis.switchDesktopCapture = function(streamId) {\r\n\r\n\t\tthiz.publishMode = \"screen\";\r\n\r\n\t\tvar audioConstraint = false;\r\n\t\t// if (typeof mediaConstraints.audio != \"undefined\" && mediaConstraints.audio != false) {\r\n\t\t// \taudioConstraint = mediaConstraints.audio;\r\n\t\t// }\r\n\r\n\t\tthiz.getUserMedia(thiz.mediaConstraints, audioConstraint, streamId);\r\n\t}\r\n\r\n\tthis.switchDesktopCaptureWithCamera = function(streamId) {\r\n\r\n\t\tthiz.publishMode = \"screen+camera\";\r\n\r\n\t\tvar audioConstraint = false;\r\n\t\t// if (typeof mediaConstraints.audio != \"undefined\" && mediaConstraints.audio != false) {\r\n\t\t// \taudioConstraint = mediaConstraints.audio;\r\n\t\t// }\r\n\t\t// thiz.getUserMedia(mediaConstraints, audioConstraint, streamId);\r\n\t}\r\n\r\n\t/**\r\n\t * This method updates the local stream. It removes existant video track from the local stream\r\n\t * and add the video track in `stream` parameter to the local stream\r\n\t */\r\n\tthiz.updateLocalStream = function(stream, onEndedCallback, stopDesktop) {\r\n\r\n\t\tif (stopDesktop && thiz.desktopStream != null) {\r\n\t\t\tthiz.desktopStream.getVideoTracks()[0].stop();\r\n\t\t}\r\n\r\n\t\tvar videoTrack = thiz.localStream.getVideoTracks()[0];\r\n\t\tthiz.localStream.removeTrack(videoTrack);\r\n\t\tvideoTrack.stop();\r\n\t\tthiz.localStream.addTrack(stream.getVideoTracks()[0]);\r\n\t\tthiz.localVideo.srcObject = thiz.localStream;\r\n\r\n\t\tif (onEndedCallback != null) {\r\n\t\t\tstream.getVideoTracks()[0].onended = function(event) {\r\n\t\t\t\tonEndedCallback(event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tthis.setVideoCameraSource = function (streamId, mediaConstraints, onEndedCallback, stopDesktop) {\r\n\r\n\t\tnavigator.mediaDevices.getUserMedia(mediaConstraints)\r\n\t\t.then(function(stream) {\r\n\t\t\tthiz.updateVideoTrack(stream, streamId, mediaConstraints, onEndedCallback, stopDesktop);\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tthiz.callbackError(error.name);\r\n\t\t});\r\n\t}\r\n\r\n\tthis.updateVideoTrack = function (stream, streamId, mediaConstraints, onEndedCallback, stopDesktop) {\r\n\r\n\t\tif (thiz.remotePeerConnection[streamId] != null) {\r\n\t\t\tvar videoTrackSender = thiz.remotePeerConnection[streamId].getSenders().find(function(s) {\r\n\t\t\t\treturn s.track.kind == \"video\";\r\n\t\t\t});\r\n\r\n\t\t\tif (videoTrackSender) {\r\n\t\t\t\tvideoTrackSender.replaceTrack(stream.getVideoTracks()[0]).then(function(result) {\r\n\t\t\t\t\tthiz.updateLocalStream(stream, onEndedCallback, stopDesktop);\r\n\t\r\n\t\t\t\t}).catch(function(error) {\r\n\t\t\t\t\tconsole.log(error.name);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.error(\"VideoTrackSender is undefined or null\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthiz.updateLocalStream(stream, onEndedCallback, stopDesktop);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tthis.onTrack = function(event, streamId) {\r\n\t\tconsole.log(\"onTrack\");\r\n\t\tif (thiz.remoteVideo != null) {\r\n\t\t\t//thiz.remoteVideo.srcObject = event.streams[0];\r\n\t\t\tif (thiz.remoteVideo.srcObject !== event.streams[0]) {\r\n\t\t\t\tthiz.remoteVideo.srcObject = event.streams[0];\r\n\t\t\t\tconsole.log('Received remote stream');\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar dataObj = {\r\n\t\t\t\t\tstream: event.streams[0],\r\n\t\t\t\t\ttrack: event.track,\r\n\t\t\t\t\tstreamId: streamId\r\n\t\t\t}\r\n\t\t\tthiz.callback(\"newStreamAvailable\", dataObj);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.iceCandidateReceived = function(event, streamId) {\r\n\t\tif (event.candidate) {\r\n\r\n\t\t\tvar protocolSupported = false;\r\n\t\t\t\r\n\t\t\tif (event.candidate.candidate == \"\") {\r\n\t\t\t\t//event candidate can be received and its value can be \"\".\r\n\t\t\t\t//don't compare the protocols\r\n\t\t\t\tprotocolSupported = true;\r\n\t\t\t}\r\n\t\t\telse if (typeof event.candidate.protocol == \"undefined\") {\r\n\t\t\t\tthiz.candidateTypes.forEach(element => {\r\n\t\t\t\t\tif (event.candidate.candidate.toLowerCase().includes(element)) {\r\n\t\t\t\t\t\tprotocolSupported = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprotocolSupported = thiz.candidateTypes.includes(event.candidate.protocol.toLowerCase());\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tif (protocolSupported) {\r\n\r\n\t\t\t\tvar jsCmd = {\r\n\t\t\t\t\t\tcommand : \"takeCandidate\",\r\n\t\t\t\t\t\tstreamId : streamId,\r\n\t\t\t\t\t\tlabel : event.candidate.sdpMLineIndex,\r\n\t\t\t\t\t\tid : event.candidate.sdpMid,\r\n\t\t\t\t\t\tcandidate : event.candidate.candidate\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (thiz.debug) {\r\n\t\t\t\t\tconsole.log(\"sending ice candiate for stream Id \" + streamId );\r\n\t\t\t\t\tconsole.log(JSON.stringify(event.candidate));\r\n\t\t\t\t}\r\n\t\t\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"Candidate's protocol(full sdp: \"+ event.candidate.candidate +\") is not supported. Supported protocols: \" + thiz.candidateTypes);\r\n\t\t\t\tif (event.candidate.candidate != \"\") { //\r\n\t\t\t\t\tthiz.callbackError(\"protocol_not_supported\", \"Support protocols: \" + thiz.candidateTypes.toString() + \" candidate: \" + event.candidate.candidate);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"No event.candidate in the iceCandidate event\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tthis.initDataChannel = function(streamId, dataChannel) {\r\n\t\tdataChannel.onerror = (error) => {\r\n\t\t\tconsole.log(\"Data Channel Error:\", error );\r\n\t\t\tvar obj = {\r\n\t\t\t\tstreamId: streamId,\r\n\t\t\t\terror: error\r\n\t\t\t};\r\n\t\t\tconsole.log(\"channel status: \", dataChannel.readyState);\r\n\t\t\tif (dataChannel.readyState != \"closed\") {\r\n\t\t\t\tthiz.callbackError(\"data_channel_error\", obj);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdataChannel.onmessage = (event) => {\r\n\t\t\tvar obj = {\r\n\t\t\t\tstreamId: streamId,\r\n\t\t\t\tevent: event,\r\n\t\t\t};\r\n\t\t\tthiz.callback(\"data_received\", obj);\r\n\t\t};\r\n\r\n\t\tdataChannel.onopen = () => {\r\n\t\t\tthiz.remotePeerConnection[streamId].dataChannel = dataChannel;\r\n\t\t\tconsole.log(\"Data channel is opened\");\r\n\t\t\tthiz.callback(\"data_channel_opened\", streamId)\r\n\t\t};\r\n\r\n\t\tdataChannel.onclose = () => {\r\n\t\t\tconsole.log(\"Data channel is closed\");\r\n\t\t\tthiz.callback(\"data_channel_closed\", streamId);\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// data channel mode can be \"publish\" , \"play\" or \"peer\" based on this it is decided which way data channel is created\r\n\tthis.initPeerConnection = function(streamId, dataChannelMode) {\r\n\t\tif (thiz.remotePeerConnection[streamId] == null)\r\n\t\t{\r\n\t\t\tvar closedStreamId = streamId;\r\n\t\t\tconsole.log(\"stream id in init peer connection: \" + streamId + \" close stream id: \" + closedStreamId);\r\n\t\t\tthiz.remotePeerConnection[streamId] = new RTCPeerConnection(thiz.peerconnection_config);\r\n\t\t\tthiz.remoteDescriptionSet[streamId] = false;\r\n\t\t\tthiz.iceCandidateList[streamId] = new Array();\r\n\t\t\tif (!thiz.playStreamId.includes(streamId))\r\n\t\t\t{\r\n\t\t\t\tif(thiz.localStream != null) {\r\n\t\t\t\t\tthiz.remotePeerConnection[streamId].addStream(thiz.localStream);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthiz.remotePeerConnection[streamId].onicecandidate = function(event) {\r\n\t\t\t\tthiz.iceCandidateReceived(event, closedStreamId);\r\n\t\t\t}\r\n\t\t\tthiz.remotePeerConnection[streamId].ontrack = function(event) {\r\n\t\t\t\tthiz.onTrack(event, closedStreamId);\r\n\t\t\t}\r\n\r\n\t\t\tif (dataChannelMode == \"publish\") {\r\n\t\t\t\t//open data channel if it's publish mode peer connection \r\n\t\t\t\tconst dataChannelOptions = {\r\n\t\t\t\t\t\tordered: true,\r\n\t\t\t\t};\r\n\t\t\t\tif (thiz.remotePeerConnection[streamId].createDataChannel) {\r\n\t\t\t\t\tvar dataChannel = thiz.remotePeerConnection[streamId].createDataChannel(streamId, dataChannelOptions);\r\n\t\t\t\t\tthiz.initDataChannel(streamId, dataChannel);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t    console.warn(\"CreateDataChannel is not supported\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if(dataChannelMode == \"play\") {\r\n\t\t\t\t//in play mode, server opens the data channel \r\n\t\t\t\tthiz.remotePeerConnection[streamId].ondatachannel = function(ev) {\r\n\t\t\t\t\tthiz.initDataChannel(streamId, ev.channel);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//for peer mode do both for now\r\n\t\t\t\tconst dataChannelOptions = {\r\n\t\t\t\t\t\tordered: true,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (thiz.remotePeerConnection[streamId].createDataChannel) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar dataChannelPeer = thiz.remotePeerConnection[streamId].createDataChannel(streamId, dataChannelOptions);\r\n\t\t\t\t\tthiz.initDataChannel(streamId, dataChannelPeer);\r\n\t\r\n\t\t\t\t\tthiz.remotePeerConnection[streamId].ondatachannel = function(ev) {\r\n\t\t\t\t\t\tthiz.initDataChannel(streamId, ev.channel);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t    console.warn(\"CreateDataChannel is not supported\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthiz.remotePeerConnection[streamId].oniceconnectionstatechange = function (event) {\r\n\t\t\t\tvar obj = {state:thiz.remotePeerConnection[streamId].iceConnectionState, streamId:streamId};\r\n\t\t\t\tthiz.callback(\"ice_connection_state_changed\",obj);\r\n\r\n\t\t\t\tif (!thiz.isPlayMode) {\r\n\t\t\t\t\tif (thiz.remotePeerConnection[streamId].iceConnectionState == \"connected\") {\r\n\r\n\t\t\t\t\t\tthiz.changeBandwidth(thiz.bandwidth, streamId).then(() => {\r\n\t\t\t\t\t\t\tconsole.log(\"Bandwidth is changed to \" + thiz.bandwidth);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(e => console.error(e));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.closePeerConnection = function(streamId) {\r\n\t\t\r\n\t\tif (thiz.remotePeerConnection[streamId] != null)\r\n\t\t{\r\n\t\t\tif (thiz.remotePeerConnection[streamId].dataChannel != null) {\r\n\t\t\t\tthiz.remotePeerConnection[streamId].dataChannel.close();\r\n\t\t\t}\r\n\t\t\tif (thiz.remotePeerConnection[streamId].signalingState != \"closed\") {\r\n\t\t\t\tthiz.remotePeerConnection[streamId].close();\r\n\t\t\t\tthiz.remotePeerConnection[streamId] = null;\r\n\t\t\t\tdelete thiz.remotePeerConnection[streamId];\r\n\t\t\t\tvar playStreamIndex = thiz.playStreamId.indexOf(streamId);\r\n\t\t\t\tif (playStreamIndex != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tthiz.playStreamId.splice(playStreamIndex, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (thiz.remotePeerConnectionStats[streamId] != null)\r\n\t\t{\r\n\t\t\tclearInterval(thiz.remotePeerConnectionStats[streamId].timerId);\r\n\t\t\tdelete thiz.remotePeerConnectionStats[streamId];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tthis.signallingState = function(streamId) {\r\n\t\tif (thiz.remotePeerConnection[streamId] != null) {\r\n\t\t\treturn thiz.remotePeerConnection[streamId].signalingState;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tthis.iceConnectionState = function(streamId) {\r\n\t\tif (thiz.remotePeerConnection[streamId] != null) {\r\n\t\t\treturn thiz.remotePeerConnection[streamId].iceConnectionState;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tthis.gotDescription = function(configuration, streamId)\r\n\t{\r\n\t\tthiz.remotePeerConnection[streamId]\r\n\t\t.setLocalDescription(configuration)\r\n\t\t.then(function(responose)  {\r\n\t\t\tconsole.debug(\"Set local description successfully for stream Id \" + streamId);\r\n\r\n\t\t\tvar jsCmd = {\r\n\t\t\t\t\tcommand : \"takeConfiguration\",\r\n\t\t\t\t\tstreamId : streamId,\r\n\t\t\t\t\ttype : configuration.type,\r\n\t\t\t\t\tsdp : configuration.sdp\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif (thiz.debug) {\r\n\t\t\t\tconsole.debug(\"local sdp: \");\r\n\t\t\t\tconsole.debug(configuration.sdp);\r\n\t\t\t}\r\n\r\n\t\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\r\n\t\t}).catch(function(error){\r\n\t\t\tconsole.error(\"Cannot set local description. Error is: \" + error);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tthis.turnOffLocalCamera = function() {\r\n\t\tif (thiz.remotePeerConnection != null) {\r\n\r\n\t\t\tvar track = thiz.localStream.getVideoTracks()[0];\r\n\t\t\ttrack.enabled = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.callbackError(\"NoActiveConnection\");\r\n\t\t}\r\n\t}\r\n\r\n\tthis.turnOnLocalCamera = function() {\r\n\t\tif (thiz.remotePeerConnection != null) {\r\n\t\t\tvar track = thiz.localStream.getVideoTracks()[0];\r\n\t\t\ttrack.enabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.callbackError(\"NoActiveConnection\");\r\n\t\t}\r\n\t}\r\n\r\n\tthis.muteLocalMic = function() {\r\n\t\tif (thiz.remotePeerConnection != null) {\r\n\t\t\tvar track = thiz.localStream.getAudioTracks()[0];\r\n\t\t\ttrack.enabled = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.callbackError(\"NoActiveConnection\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * if there is audio it calls callbackError with \"AudioAlreadyActive\" parameter\r\n\t */\r\n\tthis.unmuteLocalMic = function() {\r\n\t\tif (thiz.remotePeerConnection != null) {\r\n\t\t\tvar track = thiz.localStream.getAudioTracks()[0];\r\n\t\t\ttrack.enabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.callbackError(\"NoActiveConnection\");\r\n\t\t}\r\n\t}\r\n\r\n\tthis.takeConfiguration = function (idOfStream, configuration, typeOfConfiguration)\r\n\t{\r\n\t\tvar streamId = idOfStream\r\n\t\tvar type = typeOfConfiguration;\r\n\t\tvar conf = configuration;\r\n\t\tvar isTypeOffer = (type == \"offer\");\r\n\r\n\t\tvar dataChannelMode = \"publish\";\r\n\t\tif(isTypeOffer) {\r\n\t\t\tdataChannelMode = \"play\";\r\n\t\t}\r\n\r\n\t\tthiz.initPeerConnection(streamId, dataChannelMode);\r\n\r\n\t\tthiz.remotePeerConnection[streamId].setRemoteDescription(new RTCSessionDescription({\r\n\t\t\tsdp : conf,\r\n\t\t\ttype : type\r\n\t\t})).then(function(response)  {\r\n\r\n\t\t\tif (thiz.debug) {\r\n\t\t\t\tconsole.debug(\"set remote description is succesfull with response: \" + response + \" for stream : \"\r\n\t\t\t\t\t\t+ streamId + \" and type: \" + type);\r\n\t\t\t\tconsole.debug(conf);\r\n\t\t\t}\r\n\r\n\t\t\tthiz.remoteDescriptionSet[streamId] = true;\r\n\t\t\tvar length = thiz.iceCandidateList[streamId].length;\r\n\t\t\tconsole.debug(\"Ice candidate list size to be added: \" + length);\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tthiz.addIceCandidate(streamId, thiz.iceCandidateList[streamId][i]);\r\n\t\t\t}\r\n\t\t\tthiz.iceCandidateList[streamId] = [];\r\n\r\n\t\t\tif (isTypeOffer) {\r\n\t\t\t\t//SDP constraints may be different in play mode\r\n\t\t\t\tconsole.log(\"try to create answer for stream id: \" + streamId);\r\n\r\n\t\t\t\tthiz.remotePeerConnection[streamId].createAnswer(thiz.sdp_constraints)\r\n\t\t\t\t.then(function(configuration)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\tconsole.log(\"created answer for stream id: \" + streamId);\r\n\t\t\t\t\tthiz.gotDescription(configuration, streamId);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(function(error)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.error(\"create answer error :\" + error);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}).catch(function(error){\r\n\t\t\tif (thiz.debug) {\r\n\t\t\t\tconsole.error(\"set remote description is failed with error: \" + error);\r\n\t\t\t}\r\n\t\t\tif(error.toString().indexOf(\"InvalidAccessError\") > -1 || error.toString().indexOf(\"setRemoteDescription\")  > -1){\r\n\t\t\t\t/**\r\n\t\t\t\t * This error generally occurs in codec incompatibility.\r\n\t\t\t\t * AMS for a now supports H.264 codec. This error happens when some browsers try to open it from VP8.\r\n\t\t\t\t */\r\n\t\t\t\tthiz.callbackError(\"notSetRemoteDescription\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n\tthis.takeCandidate = function(idOfTheStream, tmpLabel, tmpCandidate) {\r\n\t\tvar streamId = idOfTheStream;\r\n\t\tvar label = tmpLabel;\r\n\t\tvar candidateSdp = tmpCandidate;\r\n\r\n\t\tvar candidate = new RTCIceCandidate({\r\n\t\t\tsdpMLineIndex : label,\r\n\t\t\tcandidate : candidateSdp\r\n\t\t});\r\n\r\n\t\tvar dataChannelMode = \"peer\";\r\n\t\tthiz.initPeerConnection(streamId, dataChannelMode);\r\n\r\n\t\tif (thiz.remoteDescriptionSet[streamId] == true) {\r\n\t\t\tthiz.addIceCandidate(streamId, candidate);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.debug(\"Ice candidate is added to list because remote description is not set yet\");\r\n\t\t\tthiz.iceCandidateList[streamId].push(candidate);\r\n\t\t}\r\n\t};\r\n\r\n\tthis.addIceCandidate = function(streamId, candidate) \r\n\t{\t\r\n\t\tvar protocolSupported = false;\r\n\t\tif (candidate.candidate == \"\") {\r\n\t\t\t//candidate can be received and its value can be \"\".\r\n\t\t\t//don't compare the protocols\r\n\t\t\tprotocolSupported = true;\r\n\t\t}\r\n\t\telse if (typeof candidate.protocol == \"undefined\") {\r\n\t\t\tthiz.candidateTypes.forEach(element => {\r\n\t\t\t\tif (candidate.candidate.toLowerCase().includes(element)) {\r\n\t\t\t\t\tprotocolSupported = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprotocolSupported = thiz.candidateTypes.includes(candidate.protocol.toLowerCase());\r\n\t\t}\t\r\n\t\t\r\n\t\tif (protocolSupported)\r\n\t\t{\r\n\r\n\t\t\tthiz.remotePeerConnection[streamId].addIceCandidate(candidate)\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tif (thiz.debug) {\r\n\t\t\t\t\tconsole.log(\"Candidate is added for stream \" + streamId);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.error(\"ice candiate cannot be added for stream id: \" + streamId + \" error is: \" + error  );\r\n\t\t\t\tconsole.error(candidate);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (thiz.debug) {\r\n\t\t\t\tconsole.log(\"Candidate's protocol(\"+candidate.protocol+\") is not supported.\" +\r\n\t\t\t\t\t\t\"Candidate: \" + candidate.candidate +\" Supported protocols:\" + thiz.candidateTypes);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tthis.startPublishing = function(idOfStream) {\r\n\t\tvar streamId = idOfStream;\r\n\r\n\t\tthiz.initPeerConnection(streamId, \"publish\");\r\n\r\n\t\tthiz.remotePeerConnection[streamId].createOffer(thiz.sdp_constraints)\r\n\t\t.then(function(configuration) {\r\n\t\t\tthiz.gotDescription(configuration, streamId);\r\n\t\t})\r\n\t\t.catch(function (error) {\r\n\t\t\tconsole.error(\"create offer error for stream id: \" + streamId + \" error: \" + error);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * If we have multiple video tracks in coming versions, this method may cause some issues\r\n\t */\r\n\tthis.getVideoSender = function(streamId) {\r\n\r\n\t\tvar videoSender = null;\r\n\t\tif ((adapter.browserDetails.browser === 'chrome' ||\r\n\t\t\t\t(adapter.browserDetails.browser === 'firefox' &&\r\n\t\t\t\t\t\tadapter.browserDetails.version >= 64)) &&\r\n\t\t\t\t\t\t'RTCRtpSender' in window &&\r\n\t\t\t\t\t\t'setParameters' in window.RTCRtpSender.prototype)\r\n\t\t{\r\n\t\t\tconst senders = thiz.remotePeerConnection[streamId].getSenders();\r\n\r\n\t\t\tfor (let i = 0; i < senders.length; i++) {\r\n\t\t\t\tif (senders[i].track != null && senders[i].track.kind == \"video\") {\r\n\t\t\t\t\tvideoSender = senders[i];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn videoSender;\r\n\t}\r\n\r\n\t/**\r\n\t * bandwidth is in kbps\r\n\t */\r\n\tthis.changeBandwidth = function(bandwidth, streamId) {\r\n\r\n\t\tvar errorDefinition = \"\";\r\n\r\n\t\tvar videoSender = thiz.getVideoSender(streamId);\r\n\r\n\t\tif (videoSender != null) {\r\n\t\t\tconst parameters = videoSender.getParameters();\r\n\r\n\t\t\tif (!parameters.encodings) {\r\n\t\t\t\tparameters.encodings = [{}];\r\n\t\t\t}\r\n\r\n\t\t\tif (bandwidth === 'unlimited') {\r\n\t\t\t\tdelete parameters.encodings[0].maxBitrate;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparameters.encodings[0].maxBitrate = bandwidth * 1000;\r\n\t\t\t}\r\n\r\n\t\t\treturn videoSender.setParameters(parameters)\r\n\t\t}\r\n\t\telse {\r\n\t\t\terrorDefinition = \"Video sender not found to change bandwidth\";\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(errorDefinition);\r\n\t};\r\n\r\n\tthis.getStats = function(streamId)\r\n\t{\r\n\t\tthiz.remotePeerConnection[streamId].getStats(null).then(stats =>\r\n\t\t{\r\n\t\t\tvar bytesReceived = 0;\r\n\t\t\tvar packetsLost = 0;\r\n\t\t\tvar fractionLost = 0;\r\n\t\t\tvar currentTime = 0;\r\n\t\t\tvar bytesSent = 0;\r\n\t\t\tvar audioLevel = -1;\r\n\r\n\t\t\tstats.forEach(value => {\r\n\r\n\t\t\t\tif (value.type == \"inbound-rtp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tbytesReceived += value.bytesReceived;\r\n\t\t\t\t\tpacketsLost += value.packetsLost;\r\n\t\t\t\t\tfractionLost += value.fractionLost;\r\n\t\t\t\t\tcurrentTime = value.timestamp;\r\n\t\t\t\t}\r\n\t\t\t\telse if (value.type == \"outbound-rtp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tbytesSent += value.bytesSent\r\n\t\t\t\t\tcurrentTime = value.timestamp\r\n\t\t\t\t}\r\n\t\t\t\telse if (value.type == \"track\" && typeof value.kind != \"undefined\" && value.kind == \"audio\") {\r\n\t\t\t\t\tif (typeof value.audioLevel != \"undefined\") {\r\n\t\t\t\t\t\taudioLevel = value.audioLevel;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthiz.remotePeerConnectionStats[streamId].totalBytesReceived = bytesReceived;\r\n\t\t\tthiz.remotePeerConnectionStats[streamId].packetsLost = packetsLost;\r\n\t\t\tthiz.remotePeerConnectionStats[streamId].fractionLost = fractionLost;\r\n\t\t\tthiz.remotePeerConnectionStats[streamId].currentTime = currentTime;\r\n\t\t\tthiz.remotePeerConnectionStats[streamId].totalBytesSent = bytesSent;\r\n\t\t\tthiz.remotePeerConnectionStats[streamId].audioLevel = audioLevel;\r\n\r\n\t\t\tthiz.callback(\"updated_stats\", thiz.remotePeerConnectionStats[streamId]);\r\n\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tthis.enableStats = function(streamId) {\r\n\t\tthiz.remotePeerConnectionStats[streamId] = new PeerStats(streamId);\r\n\t\tthiz.remotePeerConnectionStats[streamId].timerId = setInterval(() =>\r\n\t\t{\r\n\t\t\tthiz.getStats(streamId);\r\n\r\n\t\t}, 5000);\r\n\t}\r\n\r\n\t/**\r\n\t * After calling this function, create new WebRTCAdaptor instance, don't use the the same objectone\r\n\t * Because all streams are closed on server side as well when websocket connection is closed.\r\n\t */\r\n\tthis.closeWebSocket = function() {\r\n\t\tfor (var key in thiz.remotePeerConnection) {\r\n\t\t\tthiz.remotePeerConnection[key].close();\r\n\t\t}\r\n\t\t//free the remote peer connection by initializing again\r\n\t\tthiz.remotePeerConnection = new Array();\r\n\t\tthiz.webSocketAdaptor.close();\r\n\t}\r\n\r\n\tthis.peerMessage = function (streamId, definition, data) {\r\n\t\tvar jsCmd = {\r\n\t\t\t\tcommand : \"peerMessageCommand\",\r\n\t\t\t\tstreamId : streamId,\r\n\t\t\t\tdefinition : definition,\r\n\t\t\t\tdata: data,\r\n\t\t};\r\n\r\n\t\tthiz.webSocketAdaptor.send(JSON.stringify(jsCmd));\r\n\t}\r\n\r\n\tthis.sendData = function(streamId, message) {\r\n\t\tvar dataChannel = thiz.remotePeerConnection[streamId].dataChannel;\r\n\t\tdataChannel.send(message);\r\n\t}\r\n\r\n\tfunction WebSocketAdaptor() {\r\n\t\tvar wsConn = new WebSocket(thiz.websocket_url);\r\n\r\n\t\tvar connected = false;\r\n\r\n\t\tvar pingTimerId = -1;\r\n\r\n\t\tvar clearPingTimer = function() {\r\n\t\t\tif (pingTimerId != -1) {\r\n\t\t\t\tif (thiz.debug) {\r\n\t\t\t\t}\r\n\t\t\t\tclearInterval(pingTimerId);\r\n\t\t\t\tpingTimerId = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar sendPing = function() {\r\n\t\t\tvar jsCmd = {\r\n\t\t\t\t\tcommand : \"ping\"\r\n\t\t\t};\r\n\t\t\twsConn.send(JSON.stringify(jsCmd));\r\n\t\t}\r\n\r\n\t\tthis.close = function() {\r\n\t\t\twsConn.close();\r\n\t\t}\r\n\r\n\t\twsConn.onopen = function() {\r\n\t\t\tif (thiz.debug) {\r\n\t\t\t}\r\n\r\n\t\t\tpingTimerId = setInterval(() => {\r\n\t\t\t\tsendPing();\r\n\t\t\t}, 3000);\r\n\r\n\t\t\tconnected = true;\r\n\t\t\tthiz.callback(\"initialized\");\r\n\t\t}\r\n\r\n\t\tthis.send = function(text) {\r\n\r\n\t\t\tif (wsConn.readyState == 0 || wsConn.readyState == 2 || wsConn.readyState == 3) {\r\n\t\t\t\tthiz.callbackError(\"WebSocketNotConnected\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\twsConn.send(text);\r\n\t\t}\r\n\r\n\t\tthis.isConnected = function() {\r\n\t\t\treturn connected;\r\n\t\t}\r\n\r\n\t\twsConn.onmessage = function(event) {\r\n\t\t\tvar obj = JSON.parse(event.data);\r\n\r\n\t\t\tif (obj.command == \"start\")\r\n\t\t\t{\r\n\t\t\t\t//this command is received first, when publishing so playmode is false\r\n\r\n\t\t\t\tif (thiz.debug) {\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthiz.startPublishing(obj.streamId);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"takeCandidate\") {\r\n\r\n\t\t\t\tif (thiz.debug) {\r\n\t\t\t\t\tconsole.debug(\"received ice candidate for stream id \" + obj.streamId);\r\n\t\t\t\t\tconsole.debug(obj.candidate);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthiz.takeCandidate(obj.streamId, obj.label, obj.candidate);\r\n\r\n\t\t\t} else if (obj.command == \"takeConfiguration\") {\r\n\r\n\t\t\t\tif (thiz.debug) {\r\n\t\t\t\t\tconsole.log(\"received remote description type for stream id: \" + obj.streamId + \" type: \" + obj.type );\r\n\t\t\t\t}\r\n\t\t\t\tthiz.takeConfiguration(obj.streamId, obj.sdp, obj.type);\r\n\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"stop\") {\r\n\t\t\t\tconsole.debug(\"Stop command received\");\r\n\t\t\t\tthiz.closePeerConnection(obj.streamId);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"error\") {\r\n\t\t\t\tthiz.callbackError(obj.definition);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"notification\") {\r\n\t\t\t\tthiz.callback(obj.definition, obj);\r\n\t\t\t\tif (obj.definition == \"play_finished\" || obj.definition == \"publish_finished\") {\r\n\t\t\t\t\tthiz.closePeerConnection(obj.streamId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"streamInformation\") {\r\n\t\t\t\tthiz.callback(obj.command, obj);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"pong\") {\r\n\t\t\t\tthiz.callback(obj.command);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"trackList\") {\r\n\t\t\t\tthiz.callback(obj.command, obj);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"connectWithNewId\") {\r\n\t\t\t\tthiz.multiPeerStreamId = obj.streamId;\r\n\t\t\t\tthiz.join(obj.streamId);\r\n\t\t\t}\r\n\t\t\telse if (obj.command == \"peerMessageCommand\") {\r\n\t\t\t\tthiz.callback(obj.command, obj);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twsConn.onerror = function(error) {\r\n\t\t\tclearPingTimer();\r\n\t\t\tthiz.callbackError(error)\r\n\t\t}\r\n\r\n\t\twsConn.onclose = function(event) {\r\n\t\t\tconnected = false;\r\n\t\t\tclearPingTimer();\r\n\t\t\tthiz.callback(\"closed\", event);\r\n\t\t}\r\n\t}\r\n} }\r\nexport default WebRTCAdaptor;\r\n\r\n","import React from 'react';\r\n\r\ninterface videoProps {\r\n    stream: any;\r\n}\r\n\r\nclass VideoStream extends React.Component<videoProps>{\r\n\r\n    videoRef:any = null;\r\n    \r\n    constructor(props:videoProps) {\r\n        super(props)\r\n        this.videoRef = React.createRef()\r\n      }\r\n      \r\n      componentDidMount() {\r\n        this.updateVideoStream()    \r\n      }\r\n      \r\n      componentDidUpdate() {\r\n        this.updateVideoStream()\r\n      }\r\n      \r\n      updateVideoStream() {\r\n        if (this.videoRef.current.srcObject !== this.props.stream) {\r\n          this.videoRef.current.srcObject = this.props.stream\r\n        }\r\n      }\r\n\r\n      render() {\r\n          const {stream}=this.props\r\n        return (\r\n            <div className=\"videoContainer\">\r\n                {\r\n                    stream?\r\n                    <video ref={this.videoRef} autoPlay  />:\r\n                    <div></div>\r\n                }\r\n            </div>\r\n        )\r\n        \r\n      }\r\n}\r\nexport default VideoStream;","import React from 'react'\r\nexport const ShareScreenIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path fill=\"greenyellow\" d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.11-.9-2-2-2H4c-1.11 0-2 .89-2 2v10c0 1.1.89 2 2 2H0v2h24v-2h-4zm-7-3.53v-2.19c-2.78 0-4.61.85-6 2.72.56-2.67 2.11-5.33 6-5.87V7l4 3.73-4 3.74z\"/></svg>\r\n);\r\n\r\nexport const MicOnIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path fill=\"greenyellow\" d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\r\n)\r\n\r\nexport const MicOffIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/><path fill=\"greenyellow\" d=\"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"/></svg>\r\n)\r\n\r\nexport const CamOnIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path fill=\"greenyellow\" d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"/></svg>\r\n)\r\n\r\nexport const CamOffIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/><path fill=\"greenyellow\" d=\"M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"/></svg>\r\n)\r\n","import React from 'react'\r\nimport VideoStream from './video';\r\nimport { connect } from 'react-redux';\r\nimport GridLayout from 'react-grid-layout';\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport { ShareScreenIcon, MicOnIcon, CamOffIcon } from '../js/Icons';\r\n\r\n\r\nclass UserRoom extends React.Component<any,any> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={\r\n          isMicMute:false,\r\n          ifCamaraOff:false\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n      const layout = [\r\n        {i: 'a', x: 0, y: 0, w: 2, h: 2, static: true},\r\n        {i: 'b', x: 2, y: 0, w: 2, h: 2, minW: 2, maxW: 4},\r\n        {i: 'c', x: 4, y: 0, w: 1, h: 2}\r\n      ];\r\n\r\n        const {webinarReducer}=this.props;\r\n        return(\r\n        <div className=\" w100\">\r\n          <ReactGridLayout  \r\n          className=\"layout\" \r\n          cols={3}\r\n          width={1200}\r\n          layout={layout}\r\n          rowHeight= {300}\r\n          >\r\n          \r\n        {\r\n            this.props.webinarReducer.roomOfStream.map((v:any,index:any)=>{\r\n              return (\r\n                  <div key={`${index}`} style={{zIndex:1000}}>\r\n                      <VideoStream stream={v.stream}/>\r\n                  </div>\r\n                );\r\n          })\r\n        }\r\n        </ReactGridLayout >\r\n        <div className=\"w100\" style={{zIndex:1001,position:'absolute',bottom:0}}> \r\n          <button className='control-btn'>\r\n              <ShareScreenIcon />\r\n          </button>\r\n          <button className='control-btn' onClick={this.props.microMute}>\r\n            {\r\n                !webinarReducer.isMicMute?(\r\n                <MicOnIcon/>\r\n                ):(\r\n                <MicOnIcon/>\r\n                )\r\n            }\r\n          </button>\r\n          <button className='control-btn' onClick={this.props.camaraOff}>\r\n              {\r\n                    !webinarReducer.ifCamaraOff?(\r\n                  <CamOffIcon/>\r\n                  ):(\r\n                  <CamOffIcon/>\r\n                  )\r\n              }\r\n          </button>\r\n        </div>\r\n        {webinarReducer.showVideo && (\r\n          <div className='status'>\r\n              <p>Establishing connection...</p>\r\n          </div>\r\n        )}\r\n    </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state:any) => {\r\n    return{\r\n        webinarReducer: state.webinarReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n  return {\r\n      setAdmin:(admin:boolean)=>{\r\n          dispatch({ type: \"set_admin\", payload: admin })\r\n      },\r\n      setCamara:(camara:boolean)=>{\r\n        dispatch({ type: \" camara_off\", payload: camara })\r\n      },\r\n      setMicro:(micro:boolean)=>{\r\n        dispatch({ type: \"micro_mute\", payload: micro })\r\n      }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (UserRoom);","import React from 'react';\r\nimport RoomState from '../interface';\r\nimport VideoStream from './video';\r\nimport { connect } from 'react-redux';\r\nimport GridLayout from 'react-grid-layout';\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport 'react-grid-layout/css/styles.css' \r\nimport 'react-resizable/css/styles.css'\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport {ShareScreenIcon,MicOnIcon,MicOffIcon,CamOnIcon,CamOffIcon} from '../js/Icons';\r\n\r\n\r\nclass AdminRoom  extends React.Component<any,any> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            col:{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\r\n        }\r\n    }\r\n\r\n\r\n    generateDOM= ()=> {\r\n        return this.props.webinarReducer.roomOfStream.map((v:any,index:any)=>{\r\n            return (\r\n                <div key={`${index}`} style={{zIndex:1000}}>\r\n                    <VideoStream stream={v.stream}/>\r\n                </div>\r\n              );\r\n        })\r\n    }\r\n\r\n    emitCamaraOff = (streamId:any,turnOffCamara:boolean)=>{\r\n        const{webinarReducer}=this.props;\r\n        webinarReducer.socket.emit('turnOffCamara',{\r\n            streamId,\r\n            turnOffCamara\r\n        });\r\n    }\r\n\r\n    emitMuteOff = (streamId:any,muteMicro:boolean) =>{ \r\n        const{webinarReducer}=this.props;\r\n        webinarReducer.socket.emit('muteMicro',{\r\n            streamId,\r\n            muteMicro\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        const {webinarReducer}=this.props;\r\n\r\n        const layout = [\r\n            {i: '0', x: 0, y: 0, w: 2, h: 2, maxW:Infinity,isResizable:true,isDraggable:true },\r\n            {i: '1', x: 5, y: 0, w: 2, h: 2,  maxW:Infinity},\r\n            {i: '2', x: 10, y: 10, w: 1, h: 2 , maxW:Infinity}\r\n        ];\r\n  \r\n          return(\r\n              <div className=\" w100\">\r\n                <ReactGridLayout  \r\n                className=\"layout\" \r\n                cols={3}\r\n                width={1200}\r\n                layout={layout}\r\n                rowHeight= {300}\r\n                >\r\n                \r\n              {\r\n                  this.props.webinarReducer.roomOfStream.map((v:any,index:any)=>{\r\n                    return (\r\n                        <div key={`${index}`} style={{zIndex:1000}}>\r\n                            <VideoStream stream={v.stream}/>\r\n                            <div className=\"w100\" style={{zIndex:1001,position:'absolute',bottom:0}}> \r\n                            <button className='control-btn'>\r\n                                <ShareScreenIcon />\r\n                            </button>\r\n                            <button className='control-btn' onClick={()=>{this.emitMuteOff(v.streamId,true)}}>\r\n                            {\r\n                               !webinarReducer.isMicMute?(\r\n                                <MicOnIcon/>\r\n                                ):(\r\n                                <MicOffIcon/>\r\n                                )\r\n                            }\r\n                            </button>\r\n                            <button className='control-btn' onClick={()=>{this.emitCamaraOff(v.streamId,true)}}>\r\n                                {\r\n                                     !webinarReducer.ifCamaraOff?(\r\n                                    <CamOnIcon/>\r\n                                    ):(\r\n                                    <CamOffIcon/>\r\n                                    )\r\n                                }\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                      );\r\n                })\r\n              }\r\n                </ReactGridLayout >\r\n              {webinarReducer.showVideo && (\r\n                <div className='status'>\r\n                    <p>Establishing connection...</p>\r\n                </div>\r\n              )}\r\n          </div>\r\n          )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state:any)=>{\r\n    return{\r\n        webinarReducer: state.webinarReducer\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps) (AdminRoom);\r\n\r\n\r\n","import React from 'react';\r\nimport WebRTCAdaptor from '../js/webrtcAdaptor';\r\nimport RoomState, { roomOfStream } from '../interface';\r\nimport WebinarTools from '../services/webinarTools';\r\nimport io from 'socket.io-client';\r\nimport {connect} from 'react-redux';\r\nimport UserRoom from '../components/userRoom';\r\nimport AdminRoom from '../components/adminRoom';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    rooms?: string;\r\n    match?:any;\r\n}\r\n\r\n\r\nclass Room extends React.Component<any,RoomState>{\r\n    constructor(props:IProps) {\r\n        super(props)\r\n        this.state = {\r\n            streamId:null,\r\n            token:null ,\r\n            playOnly:false ,\r\n            roomOfStream :new Array(),\r\n            publishStreamId:null,\r\n            isMicMute:false,\r\n            ifCamaraOff:false ,\r\n            showVideo:false ,\r\n            websocketURL:\"wss://\" + 'videoconference.ulive.io' + \":5443\" + '/LiveApp/' + \"websocket\",\r\n            adapter:null ,\r\n            webRTCAdaptor:null,\r\n            roomNameBox:'room1',\r\n            userName:'',\r\n            camaraId:'',\r\n            socket:null,\r\n            isDataChanelOpen:false ,\r\n            isAdmin:false,\r\n            waitCreateRoom:false,\r\n            redirect:false,\r\n            socketId:null\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const { match: { params },setRoomName } = this.props;\r\n        const room = params.roomId; \r\n        \r\n        let valid = false;\r\n        this.setState({...this.state,roomNameBox:room});\r\n        setRoomName(room);\r\n\r\n        await fetch(`https://webinar-zentv-front.herokuapp.com//webinar/validRoom`,\r\n        { method: 'POST',\r\n\r\n        mode: 'cors',\r\n        headers: new Headers({\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }),\r\n        cache: 'no-cache',\r\n        body:JSON.stringify({\r\n            'user':'Admin',\r\n            'roomId':room,\r\n            'adminRoom':{\r\n                'isAdmin':true,\r\n                'streamId':null,\r\n            }\r\n        }),\r\n        })\r\n        .then(res => res.json()).then((res)=>{\r\n            valid = res.valid\r\n         });\r\n\r\n        this.createRoom(valid);\r\n\r\n    }\r\n\r\n    createRoom = async(valid:boolean)=>{\r\n        if (valid) {\r\n            await fetch(`https://videoconference.ulive.io:5443/LiveApp/rest/v2/broadcasts/create`,\r\n                { \r\n                    method: 'POST',\r\n                    headers:{\r\n                            'Content-Type': 'application/json'\r\n                            },\r\n                    mode: 'cors',\r\n                    cache: 'default' \r\n                }).then(res => res.json()).then((res)=>{\r\n                    this.setState({...this.state,\r\n                    streamId:res.streamId,\r\n                });\r\n            });\r\n                \r\n                await this.webRTCInit();\r\n    \r\n        }else{\r\n           this.setRedirect();\r\n        }\r\n    }\r\n\r\n\r\n    webRTCInit = async  ()=>{\r\n        let thiz = this\r\n        const{websocketURL}=this.state;\r\n        let pc_config =\r\n          {\r\n            'iceServers' : [ {\r\n              'urls' : 'stun:stun.l.google.com:19302'\r\n            } ]\r\n          };\r\n        let sdpConstraints = {\r\n            OfferToReceiveAudio : true,\r\n            OfferToReceiveVideo : true\r\n              \r\n        };\r\n        let mediaConstraints = {\r\n            video: true,\r\n            audio: true\r\n        };\r\n        let webRTCAdaptor = new WebRTCAdaptor({\r\n            websocket_url : websocketURL,\r\n            mediaConstraints : mediaConstraints,\r\n            peerconnection_config : pc_config,\r\n            sdp_constraints : sdpConstraints,\r\n            localVideoId : \"localVideo\",\r\n            debug : true,\r\n            callback : function(info:any, obj:any) {\r\n                if (info ===\"pong\") {\r\n                    return\r\n                }\r\n                if (info == \"initialized\") {\r\n                    thiz.joinRoom();\r\n                } else if (info == \"joinedTheRoom\") {\t\r\n                if(thiz.state.playOnly) {\r\n                  console.log('playOnly')\r\n                }\r\n                else {\r\n                  thiz.state.webRTCAdaptor.publish(obj.streamId);\r\n                }\r\n                if (obj.streams != null) {\r\n                    console.log(obj.streams)\r\n                  obj.streams.forEach((item:any)=> {\r\n                    thiz.state.webRTCAdaptor.play(item, thiz.state.token,thiz.state.roomNameBox);\r\n                  });\r\n                }                        \r\n                } else if (info == \"streamJoined\") {\r\n                    const {playOnly,token,roomNameBox}=thiz.state;\r\n                    thiz.state.webRTCAdaptor.play(obj.streamId, token,roomNameBox)             \r\n                } else if (info == \"newStreamAvailable\") {\r\n                    thiz.playVideo(obj);       \r\n                } else if (info == \"streamLeaved\") {\r\n                    thiz.removeRemoteVideo(obj.streamId);\t\t\t\r\n                } else if (info == \"publish_started\") {\r\n                    thiz.props.setAdmin(true);\r\n                    thiz.setState({...thiz.state,isAdmin:true});\r\n                    thiz.setAdmin(obj);\t\t\t\t\t\r\n                }else if (info == \"publish_finished\") {\r\n                //called when stream publishing has finished for this client\t\t\t\t\r\n                }else if (info == \"leavedFromRoom\") {\r\n                            //called when this client is leaved from the room  \r\n                }else if (info == \"closed\") {\r\n                    if (typeof obj != \"undefined\") {\r\n                        console.log(\"Connecton closed: \"+ JSON.stringify(obj));\r\n                    }\t\r\n                    //Llamar al endpoitn que borrar el streamId\t\t\r\n                } \r\n                else if (info == \"play_finished\") {\r\n                    let video:any = document.getElementById(\"remoteVideo\"+ obj.streamId);\r\n                    if (video != null) {\r\n                        video.srcObject = null;\r\n                    }\r\n                //called when a stream has finished playing\t\t\t\r\n                } else if (info == \"streamInformation\") {\r\n                    thiz.state.webRTCAdaptor.streamInformation(obj);\r\n                } else if (info == \"data_channel_opened\") {\r\n                    thiz.setState({...thiz.state,isDataChanelOpen:true});\r\n                } else if (info == \"data_channel_closed\") {\r\n                    thiz.setState({...thiz.state,isDataChanelOpen:false});\r\n                } else if(info == \"data_received\") {\r\n                    thiz.state.webRTCAdaptor.handleNotificationEvent(obj);\r\n                }\r\n                },\r\n                callbackError : function(error:any, message:any) {\r\n                //some of the possible errors, NotFoundError, SecurityError,PermissionDeniedError\r\n                }},true);\r\n\r\n            this.setState({...this.state,webRTCAdaptor:webRTCAdaptor});\r\n    }\r\n\r\n    setAdmin = (obj:any)=>{\r\n        // let admin = {\r\n        //     isAdmin:true,\r\n        //     streamId:obj.streamId,\r\n        //     stream:obj.stream,\r\n        //     socketId:string;\r\n        // }\r\n    }\r\n\r\n    joinRoom = async()=> {\r\n        const{roomNameBox,streamId}=this.state;\r\n        await this.initSocket();\r\n        await this.state.webRTCAdaptor.joinRoom(roomNameBox, streamId);\r\n    }\r\n    \r\n    leaveRoom = (stream:any) =>{\r\n        const { setRoomOfStream } = this.props;\r\n        const{webRTCAdaptor,roomNameBox,roomOfStream}=this.state;\r\n        this.state.webRTCAdaptor.leaveFromRoom(roomNameBox);\r\n        this.state.webRTCAdaptor.muteLocalMic(false);\r\n        this.state.webRTCAdaptor.turnOffLocalCamera(false);\r\n        const auxRooms = roomOfStream.filter(element => element.streamId !== stream.streamId);\r\n        setRoomOfStream(roomOfStream);\r\n        this.setState({...this.state,roomOfStream:auxRooms,showVideo:false});\r\n    }\r\n\r\n    playVideo = (obj:any) => {\r\n        const { setRoomOfStream } = this.props;\r\n        const {socketId}=this.state;\r\n        debugger\r\n        if (obj.streamId) {\r\n            let video:roomOfStream = {\r\n            streamId:obj.streamId,\r\n            stream:obj.stream,\r\n            videoRef : React.createRef(),\r\n            ifCamaraOff:true,\r\n            microMute:true,\r\n            socketId:socketId\r\n        };\r\n        let clients = this.state.roomOfStream;\r\n        if (clients.length > 0 ) {\r\n            const valid = clients.some(e => e.streamId === video.streamId);\r\n            if (!valid) {\r\n                clients.push(video)\r\n            }   \r\n        }else{\r\n            clients.push(video);\r\n        }\r\n            setRoomOfStream(clients);\r\n            this.setState({...this.state,roomOfStream:clients,showVideo:true});\r\n        }\r\n    }\r\n\r\n    removeRemoteVideo = async(streamId:any) => {\r\n        await fetch('https://videoconference.ulive.io:5443/LiveApp/rest/v2/broadcasts/'+streamId,\r\n            {\r\n                method:'DELETE',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                }, \r\n                mode: 'cors',\r\n                cache: 'default'\r\n            }\r\n        ).then((res =>res.json()));\r\n    }\r\n\r\n    handleChange = (e:any)=>{\r\n        const { id , value} = e.target;\r\n        this.setState({...this.state,[`${id}`]:value});\r\n    }\r\n\r\n    initSocket = ()=>{\r\n\r\n        const {streamId,roomNameBox,userName}=this.state\r\n        const {setSocket}=this.props;\r\n        const socket = io('http://localhost:5000');\r\n        setSocket(socket);\r\n        this.setState({...this.state,socket},()=>{\r\n            socket.on('connect', (sockets:any)=>{  \r\n                socket.emit('entrarChat',\r\n                { \r\n                    streamId,\r\n                    roomNameBox,\r\n                    userName\r\n                });\r\n            });\r\n        });\r\n\r\n        socket.on('entrarChat',(data:any)=>{\r\n            this.setState({...this.state,socketId:data.socketId})\r\n        });\r\n\r\n        socket.on('turnOffCamara',(data:any)=>{\r\n            if (data.turnOffLocalCamera) {\r\n            this.turnOffLocalCamera(true);\r\n            }\r\n        });\r\n\r\n        socket.on('muteMicro',(data:any)=>{\r\n            if (data.turnOffLocalCamera) {\r\n            this.muteLocalMic(true);\r\n            }\r\n        });\r\n        this.setState({...this.state,waitCreateRoom:true})\r\n    }\r\n        \r\n    emitLeaveRoom = async()=>{\r\n        const{socket,streamId,roomOfStream}=this.state;\r\n        socket.on('leaveRoom',{\r\n            streamId:streamId\r\n        },(data:any)=>{\r\n            if (data.leaveRoom) {\r\n            const newRoomOfStream = roomOfStream.filter((e)=>e.streamId !== streamId);\r\n            this.setState({...this.state,roomOfStream:newRoomOfStream});\r\n            }\r\n        });\r\n    }\r\n\r\n    turnOffLocalCamera = (isCameraOff:boolean)=> {\r\n        if (isCameraOff) {\r\n            this.state.webRTCAdaptor.turnOffLocalCamera();\r\n            this.sendNotificationEvent(\"CAM_TURNED_OFF\");\r\n        }else{\r\n            this.state.webRTCAdaptor.turnOnLocalCamera();\r\n            this.sendNotificationEvent(\"CAM_TURNED_ON\");\r\n        }\r\n    }\r\n\r\n    muteLocalMic = (isMicMuted:boolean)=>{\r\n        if (isMicMuted) {\r\n            this.state.webRTCAdaptor.muteLocalMic();\r\n            this.sendNotificationEvent(\"MIC_MUTED\");\r\n        }else{\r\n            this.state.webRTCAdaptor.unmuteLocalMic();\r\n        }\r\n    }\r\n\r\n    sendNotificationEvent =(eventType:any)=> {\r\n      const {isDataChanelOpen,publishStreamId,webRTCAdaptor}=this.state;\r\n          if(isDataChanelOpen) {\r\n              let notEvent = { streamId: publishStreamId, eventType:eventType };\r\n              webRTCAdaptor.sendData(publishStreamId, JSON.stringify(notEvent));\r\n          }\telse {\r\n              console.log(\"Could not send the notification because data channel is not open.\");\r\n        }\r\n    }\r\n\r\n    setRedirect = () => {\r\n        this.setState({\r\n          redirect: true\r\n        })\r\n    }\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={`/`}/>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {webinarReducer}= this.props\r\n        return(\r\n        <div className='w100'>\r\n            <div id=\"players\" >\r\n                <div className=\"col\">\r\n                    <video id=\"localVideo\" autoPlay muted  width=\"200\" height=\"200\"/>\r\n                </div>\r\n            </div>\r\n            {webinarReducer.isAdmin ? \r\n            <AdminRoom /> : \r\n            <UserRoom \r\n                camaraOff={()=>{this.turnOffLocalCamera(true)}}\r\n                microMute={()=>{this.muteLocalMic(true)}}\r\n            />}\r\n            {this.renderRedirect()}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:any)=>{\r\n    return{\r\n        webinarReducer: state.webinarReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        setRoomOfStream:(rooms:any) =>{\r\n            dispatch({ type: \"set_rooms\", payload: rooms })\r\n        },\r\n        setRoomName:(rooms:any) =>{\r\n            dispatch({ type: \"set_room_name\", payload: rooms })\r\n        },\r\n        setSocket:(socket:any) =>{\r\n            dispatch({ type: \"set_socket\", payload: socket })\r\n        },\r\n        setAdmin:(admin:boolean)=>{\r\n            dispatch({ type: \"set_admin\", payload: admin })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Room);","import React from 'react'\r\nimport {Redirect}  from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IProps {\r\n    rooms?: string;\r\n}\r\ninterface IState {\r\n    roomName: string;\r\n    redirect:boolean;\r\n}\r\n\r\nclass GoToRoomInput extends React.Component<any,IState> {\r\n\r\n    constructor(props:IProps) {\r\n        super(props)\r\n        this.state = {\r\n            roomName:'room1',\r\n            redirect:false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async()=>{\r\n        await fetch('https://webinar-zentv-front.herokuapp.com/webinar/createHash',\r\n        { \r\n            method: 'GET',\r\n            headers:{'Content-Type': 'application/json'},\r\n            mode: 'cors',\r\n            cache: 'default' \r\n        }).then(res => res.json()).then((res => {\r\n            this.setState({...this.state,roomName:res.roomsHash});\r\n        }))\r\n    \r\n    }\r\n    handleChange = (e:any)=>{\r\n        const { id , value} = e.target;\r\n        this.setState({...this.state,[`${id}`]:value});\r\n    }\r\n    setRedirect = () => {\r\n        this.setState({\r\n          redirect: true\r\n        })\r\n    }\r\n    renderRedirect = () => {\r\n        const {setAdmin}=this.props;\r\n        if (this.state.redirect) {\r\n            setAdmin(true);\r\n            return <Redirect to={`/${this.state.roomName}`}/>\r\n        }\r\n    }\r\n    handleChangeRedirect = ()=>{\r\n        this.createRoom()\r\n    }\r\n\r\n    createRoom = async()=>{\r\n        const {roomName}=this.state;\r\n\r\n       await fetch(`https://webinar-zentv-front.herokuapp.com//webinar/createRoom`,\r\n       { method: 'POST',\r\n       headers:{\r\n         'Content-Type': 'application/json'\r\n       },\r\n        mode: 'cors',\r\n       body:JSON.stringify({\r\n            'user':'Admin',\r\n            'roomId':roomName,\r\n            'adminRoom':{\r\n                'isAdmin':true,\r\n                'streamId':null,\r\n            }\r\n        }),\r\n       })\r\n       .then(res => res.json()).then((res)=>{\r\n            this.setState({...this.state,redirect:true});\r\n       }).\r\n       catch((error)=> {\r\n           console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n       });    \r\n   }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"enter-room-container\">\r\n                    <input type=\"text\" value={this.state.roomName} id={this.state.roomName} onChange={(e)=>{this.handleChange(e)}}/>\r\n                    <button onClick={()=>{\r\n                        this.handleChangeRedirect();\r\n                    }}>Enter</button>\r\n                {this.renderRedirect()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        setAdmin:(admin:boolean)=>{\r\n            dispatch({ type: \"set_admin\", payload: admin })\r\n        }\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps) (GoToRoomInput);","import RoomState from '../interface';\r\nimport store from '../../redux/store';\r\n\r\nconst initState:RoomState = {\r\n    streamId:null,\r\n    token:null ,\r\n    playOnly:false ,\r\n    roomOfStream :new Array(),\r\n    publishStreamId:null,\r\n    isMicMute:false,\r\n    ifCamaraOff:false ,\r\n    showVideo:false ,\r\n    websocketURL:\"wss://\" + 'videoconference.ulive.io' + \":5443\" + '/LiveApp/' + \"websocket\",\r\n    adapter:null ,\r\n    webRTCAdaptor:null,\r\n    roomNameBox:'room1',\r\n    userName:'',\r\n    camaraId:'',\r\n    socket:null,\r\n    isDataChanelOpen:false ,\r\n    isAdmin:false,\r\n    socketId:null,\r\n}\r\n\r\nconst webinarReducer = (state = initState,actions:any)=>{\r\n    switch (actions.type) {\r\n        case'camara_off':{\r\n            return{\r\n                ...state,\r\n                ifCamaraOff:actions.payload\r\n            }\r\n        }\r\n        case'micro_mute':{\r\n            return{\r\n                ...state,\r\n                isMicMute:actions.payload\r\n            }\r\n        }\r\n        case'leave_room':{\r\n            return{\r\n                ...state,\r\n                roomNameBox:actions.payload\r\n            }\r\n        }\r\n        case'admin_room':{\r\n            return{\r\n                ...state,\r\n                isAdmin:actions.payload\r\n            }\r\n        }\r\n        case'add_member_room':{\r\n            return{\r\n                ...state,\r\n                roomOfStream:actions.payload\r\n            }\r\n        }\r\n        case'set_rooms':{\r\n            return{\r\n                ...state,\r\n                roomOfStream:actions.payload\r\n            }\r\n        }\r\n        case'set_room_name':{\r\n            return{\r\n                ...state,\r\n                roomNameBox:actions.payload\r\n            }\r\n        }\r\n        case 'set_socket':{\r\n            return{\r\n                ...state,\r\n                socket:actions.payload\r\n            }\r\n        }\r\n        case 'set_admin':{\r\n            return{\r\n                ...state,\r\n                isAdmin:actions.payload\r\n            }\r\n        }\r\n        case 'set_sockets_id':{\r\n            return{\r\n                ...state,\r\n                socketId:actions.payload\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default webinarReducer;","import {createStore,combineReducers} from 'redux';\r\nimport webinarReducer from '../webinar/reducer/reducer'\r\nconst reducer:any = combineReducers({\r\n    webinarReducer:webinarReducer \r\n});\r\n\r\nconst store:any = createStore(\r\n    reducer\r\n);\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport Rooms from './webinar/components/rooms'\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport  GoToRoomInput  from './webinar/components/goToRooms';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <React.Fragment>\n            <Route path=\"/\" exact component={GoToRoomInput}/>\n            <Route path=\"/:roomId\" exact component={Rooms}/>\n          </React.Fragment>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}